rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has the 'admin' role.
    function isAdmin() {
      // Check if the requesting user's document exists and their role is 'admin'.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // READ:
      // Allow any authenticated user to read any profile (for browsing).
      // Also, allow admins to read all user data (for the admin dashboard).
      allow read: if request.auth != null || isAdmin();

      // WRITE (create, update, delete):
      // Users can only write to their own document.
      allow write: if request.auth.uid == userId;
    }

    // Rules for the 'likesReceived' collection
    match /likesReceived/{likeId} {
      // CREATE:
      // A user can create a "like" record.
      // The document ID format is assumed to be "likerId_likes_likedId"
      allow create: if request.auth != null;

      // DELETE:
      // A user can only delete a "like" record that they created.
      allow delete: if request.auth != null && resource.data.likedBy == request.auth.uid;
    }
  }
}