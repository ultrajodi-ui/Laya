rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user document
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // Users can create their own document
      allow create: if request.auth.uid == userId;
      
      // Users can update their own document
      allow update: if request.auth.uid == userId;
      
      // Only admins can delete user documents (for now, deny all deletes for safety)
      allow delete: if false; 
    }

    // Rules for the 'likesReceived' collection
    match /likesReceived/{likeId} {
        // A user can read any like document for now, can be restricted later if needed
        allow read: if request.auth.uid != null;
        
        // A user can only create/delete a like document if their UID is part of the document ID,
        // which implies they are the one performing the action.
        allow create, delete: if request.auth.uid != null && likeId.startsWith(request.auth.uid);
        
        // No updates to likes allowed
        allow update: if false;
    }
  }
}
