
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user has an 'admin' role.
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read the entire collection.
      // Other users can only read their own document.
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // Users can update their own document.
      allow update: if request.auth.uid == userId;
      
      // Any authenticated user can create their own user document.
      allow create: if request.auth.uid != null;
    }
    
    // Rules for the 'likesReceived' collection
    match /likesReceived/{likeId} {
        // A user can create a 'like' document. The likeId should be composite, e.g., `${likerId}_likes_${likedId}`
        allow create: if request.auth.uid != null && request.auth.uid == split(likeId, '_likes_')[0];
        
        // A user can read any 'like' document if they are part of the interaction.
        allow read: if request.auth.uid != null && (request.auth.uid == resource.data.likedBy || request.auth.uid == resource.data.likedUser);

        // A user can only delete a 'like' document they created.
        allow delete: if request.auth.uid != null && request.auth.uid == split(likeId, '_likes_')[0];
    }
  }
}
