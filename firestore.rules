
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow read access for any authenticated user. This is needed for browsing profiles
      // and for a user to read their own profile.
      allow read: if request.auth != null;

      // Allow a user to create, update, or delete their OWN document.
      allow write: if request.auth.uid == userId;

      // Additionally, allow an admin to update or delete any user document.
      allow update, delete: if isAdmin();
    }

    // Rules for 'likesReceived' collection
    match /likesReceived/{likeId} {
      // Allow read/write for any authenticated user.
      // More specific rules could be added if needed, e.g., based on the likeId format.
      allow read, write: if request.auth != null;
    }
    
    // Rules for 'supportQueries' collection
    match /supportQueries/{queryId} {
        // Logged-in users can create queries
        allow create: if request.auth != null;
        // Admins can read all queries
        allow read: if isAdmin();
    }

    // Rules for 'deletedUsers' collection
    match /deletedUsers/{deletedUserId} {
        // Only admins can write to or read from the deleted users archive
        allow read, write: if isAdmin();
    }
  }
}
