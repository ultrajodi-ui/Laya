rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own document
      allow create: if request.auth != null;
      
      // A user can read or update their own document
      allow read, update: if request.auth != null && request.auth.uid == userId;

      // An admin can read any user's document
      allow get: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can list all users
    match /users/{userId} {
        allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'likesReceived' collection
    match /likesReceived/{likeId} {
        // A user can only create/delete a like document if their UID is part of the likeId
        // This assumes a likeId format like 'likerUID_likes_likedUID'
        allow create, delete: if request.auth != null && request.auth.uid == split(likeId, '_likes_')[0];
        
        // Allow a user to read likes they have received
        allow read: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberid;
    }
  }
}
