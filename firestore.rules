
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if the requesting user is an administrator.
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Function to check if a user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Function to check if the request is from the user who owns the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Admin users have full read and write access to the entire database.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    match /users/{userId} {
      // Any signed-in user can view any user's profile (for browsing).
      allow read: if isSignedIn();
      
      // A user can create their own profile document.
      allow create: if isOwner(userId);

      // A user can only update their own profile document.
      allow update: if isOwner(userId);
      
      // A user can only delete their own account.
      allow delete: if isOwner(userId);
    }

    match /supportQueries/{queryId} {
        // Any signed-in user can create a support query.
        allow create: if isSignedIn();
        // Only admins can read support queries.
        allow read: if isAdmin();
    }
    
    match /likesReceived/{likeId} {
        // Any signed-in user can create (like) or delete (unlike) a like record.
        allow create, delete: if isSignedIn();
    }
    
    match /deletedUsers/{deletedId} {
        // Only admins can create (archive) records of deleted users.
        allow create: if isAdmin();
    }
  }
}
