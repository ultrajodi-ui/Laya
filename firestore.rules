rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user has the 'admin' role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read the entire collection.
      // Non-admins can only read their own document.
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // Any authenticated user can create their own profile document.
      allow create: if request.auth.uid == userId;

      // Users can only update their own document.
      allow update: if request.auth.uid == userId;

      // Admins can delete users, and users can delete their own account.
      allow delete: if isAdmin() || request.auth.uid == userId;
    }
    
    // Rules for the 'likesReceived' collection
    match /likesReceived/{likeId} {
      // A user can only create a 'like' document where they are the sender.
      allow create: if request.auth.uid == request.resource.data.likedBy;
      
      // A user can only delete a 'like' they have sent.
      allow delete: if request.auth.uid == get(/databases/$(database)/documents/likesReceived/$(likeId)).data.likedBy;
    }
  }
}
