rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the requesting user is an admin.
    function isAdmin() {
      // Check if the user document exists and if their role is 'admin'.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // A user can be read if:
      // 1. The requester is an admin.
      // 2. The requester is any authenticated user (for browsing profiles).
      allow read: if isAdmin() || request.auth != null;
      
      // A user document can be written (created, updated, deleted) only if
      // the requesting user's ID matches the document's ID.
      // This prevents users from editing other users' profiles.
      allow write: if request.auth.uid == userId;
    }

    match /likesReceived/{likeId} {
      // A user can create a "like" record.
      allow create: if request.auth != null;
      // Users can only read, update, or delete their own "like" records.
      // This is determined by checking if the 'likedBy' field in the document
      // matches the memberid of the currently authenticated user.
      allow read, update, delete: if request.auth != null && 
                                     get(/databases/$(database)/documents/likesReceived/$(likeId)).data.likedBy == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberid;
    }
  }
}
